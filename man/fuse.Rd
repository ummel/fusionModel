% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fuse.R
\name{fuse}
\alias{fuse}
\alias{fuseM}
\title{Fuse variables to a recipient dataset using conditional distribution matching}
\usage{
fuse(data, file, k = 5, idw = TRUE)

fuseM(..., M, fun = fuse, cores = 1)
}
\arguments{
\item{data}{Data frame. Recipient dataset. All categorical variables should be factors and ordered whenever possible. Data types and levels are strictly validated against predictor variables defined in \code{model}.}

\item{file}{Character. Path to fusion model file (.fsn) generated by successful call to \link{train}.}

\item{k}{Integer. Number of nearest neighbors to select from donor observations.}

\item{idw}{Logical. Should inverse distance weighting be used when randomly selecting a donor observation from the \code{k} nearest neighbors.}

\item{...}{Arguments passed to \code{fuse()}.}

\item{M}{Integer. Number of implicates to simulate.}

\item{cores}{Integer. Number of cores used. Only applicable on Unix systems.}
}
\value{
For \code{fuse()}, a data frame with same number of rows as \code{data} and one column for each synthetic fusion variable. The order of the columns reflects the order in which they where fused.

For \code{fuseM()}, a data frame with number of rows equal to \code{M * nrow(data)}. Integer column ".M" indicates implicate assignment of each observation. Note that the ordering of recipient observations is consistent within implicates, so do not change the row order if using with \code{analyze()}.
}
\description{
Fuse variables to a recipient dataset using a .fsn model produced by \link{train}. \code{fuseM()} provides a convenience wrapper for generating multiple implicates. Output of \code{fuseM()} can be passed to \code{analyze()}.
}
\examples{
# Build a fusion model using RECS microdata
# Note that "test_model.fsn" will be written to working directory
?recs
fusion.vars <- c("electricity", "natural_gas", "aircon")
predictor.vars <- names(recs)[2:12]
train(data = recs, y = fusion.vars, x = predictor.vars, file = "test_model.fsn")

# Generate single implicate of synthetic 'fusion.vars',
#  using original RECS data as the recipient
recipient <- recs[predictor.vars]
sim <- fuse(data = recipient, file = "test_model.fsn")
head(sim)

# Calling fuse() again produces different results
sim <- fuse(data = recipient, file = "test_model.fsn")
head(sim)

# Generate multiple implicates via fuseM()
# This can be passed to 'implicates' argument in ?analyze()
sim <- fuseM(data = recipient, file = "test_model.fsn", M = 5)
head(sim)
table(sim$M)
}
