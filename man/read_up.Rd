% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_up.R
\name{read_up}
\alias{read_up}
\title{Read ORNL UrbanPop data from disk}
\usage{
read_up(
  path,
  year = NULL,
  state = NULL,
  county = NULL,
  tract_bg = NULL,
  hid = NULL,
  df = NULL,
  cores = max(1, parallel::detectCores(logical = FALSE) - 1)
)
}
\arguments{
\item{path}{Character. File path to \code{\link[fst]{fst}} file containing UrbanPop data.}

\item{year}{Integer. Year(s) to select.}

\item{state}{Integer. State FIPS code(s) to select.}

\item{county}{Integer. County FIPS code(s) to select.}

\item{tract_bg}{Integer. Tract and block group FIPS code(s) to select.}

\item{hid}{Integer. ACS-PUMS household ID(s) to select.}

\item{df}{Data frame containing at least 'year' and/or 'state' columns. Provides unique combinations of the above argument values to return. \code{df} is used to perform an inner merge on an initial subset of data based on 'year' or 'state'.}

\item{cores}{Integer. Number of cores used by \code{\link[fst]{read_fst}}.}
}
\value{
A keyed \code{\link[data.table]{data.table}}.
}
\description{
NOTE: For fusionACS internal use only! Efficiently read pre-processed ORNL UrbanPop data from disk. Function arguments only make sense if you are familiar with the structure of the processed UrbanPop data.
}
\details{
Provides an efficient and fast way to load a subset of UrbanPop data into memory. An initial subset is read using \code{state} or \code{year} to restrict rows. Then \code{\link[data.table]{data.table}} operations (subset or merge) are used to efficiently reduce to the final returned subset.
}
\examples{
up.path <- "~/Documents/Projects/fusionData/urbanpop/Processed national UrbanPop.fst"

out <- read_up(path = up.path, year = 2015, state = 4)
unique(dplyr::select(out, year, state))

out <- read_up(path = up.path, year = 2015:2016, state = c(2, 12, 15))
unique(dplyr::select(out, year, state))

up.df <- data.frame(year = c(2015, 2018), state = c(8, 5), county = c(1, 3))
out <- read_up(path = up.path, df = up.df)
unique(dplyr::select(out, year, state, county))
}
