% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_fsd.R
\name{read_fsd}
\alias{read_fsd}
\title{Read fusion output from disk}
\usage{
read_fsd(
  path,
  columns = NULL,
  df = NULL,
  cores = max(1, parallel::detectCores(logical = FALSE) - 1)
)
}
\arguments{
\item{path}{Character. Path to a \code{.fsd} (or \code{.fst}) file, typically produced by \code{\link{fuse}}.}

\item{columns}{Character. Column names to read. The default is to return all columns.}

\item{df}{Data frame. Data frame used to identify a subset of rows to return. Default is to return all rows.}

\item{cores}{Integer. Number of cores used by \code{\link[fst]{fst}}.}
}
\value{
A \code{\link[data.table]{data.table}}; keys are preserved if present in the on-disk data. When \code{path} points to a \code{.fsd} file, it includes an integer column "M" indicating the implicate assignment of each observation (unless explicitly ignored by \code{columns}).
}
\description{
Efficiently read fusion output that was written to disk, optionally returning a subset of rows and/or columns. Since a \code{.fsd} file is simply a \code{\link[fst]{fst}} file under the hood, this function also works on any \code{.fst} file.
}
\details{
If \code{df} is provided and the file size on disk is less than 250 MB, then a full read and inner \code{\link[collapse]{join}} is performed. For larger files, a manual read of the required rows is performed, using \code{\link[collapse]{fmatch}} for the matching operation.
}
\examples{
# Build a fusion model using RECS microdata
# Note that "fusion_model.fsn" will be written to working directory
?recs
fusion.vars <- c("electricity", "natural_gas", "aircon")
predictor.vars <- names(recs)[2:12]
fsn.path <- train(data = recs, y = fusion.vars, x = predictor.vars)

# Write fusion output directly to disk
# Note that "results.fsd" will be written to working directory
recipient <- recs[predictor.vars]
sim <- fuse(data = recipient, fsn = fsn.path, M = 5, fsd = "results.fsd")

# Read the fusion output saved to disk
sim <- read_fsd(sim)
head(sim)

}
