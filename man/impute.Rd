% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute.R
\name{impute}
\alias{impute}
\title{Impute missing data via fusion}
\usage{
impute(data, weight = NULL, ignore = NULL, cores = 1)
}
\arguments{
\item{data}{A data frame with missing values.}

\item{weight}{Optional name of observation weights column in \code{data}.}

\item{ignore}{Optional names of columns in \code{data} to ignore as predictor variables.}

\item{cores}{Number of physical CPU cores used by \code{\link[lightgbm]{lightgbm}}. LightGBM is parallel-enabled on all platforms if OpenMP is available.}
}
\value{
A data frame with all missing values imputed.
}
\description{
A universal missing data imputation tool that wraps successive calls to \code{\link{train}} and \code{\link{fuse}} under the hood. Designed for simplicity and ease of use.
}
\details{
Variables with missing values are imputed sequentially, beginning with the variable with the fewest missing values. Since LightGBM models accommodate NA values in the predictor set, all available variables are used as potential predictors (excluding \code{ignore} variables). For each call to \code{\link{train}}, 80\% of observations are randomly selected for training and the remaining 20\% are used as a validation set to determine an appropriate number of tree learners. All LightGBM model parameters are kept at the sensible default values in \code{\link{train}}. Since \code{\link[lightgbm]{lightgbm}} uses OpenMP multithreading, it is not advisable to use \code{\link{impute}} inside a forked/parallel process when \code{cores > 1}.
}
\examples{
# Create data frame with random NA values
?recs
data <- recs[, 2:7]
miss <- replicate(ncol(data), runif(nrow(data)) < runif(1, 0.01, 0.3))
data[miss] <- NA
colSums(is.na(data))

# Impute the missing values
result <- impute(data)
anyNA(result)

}
